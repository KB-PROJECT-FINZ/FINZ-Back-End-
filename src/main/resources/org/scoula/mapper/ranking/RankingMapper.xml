<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.scoula.mapper.ranking.RankingMapper">

    <!-- ✅ 캐시: 오늘 인기 종목 (DAY) -->
    <!-- 오늘/어제 DAY -->
    <select id="selectPopularStocksCachedDay" resultType="org.scoula.domain.ranking.PopularStockDto">
  <![CDATA[
        SELECT ps.stock_code AS stockCode, ps.stock_name AS stockName,
               ps.transaction_count AS transactionCount, ps.ranking AS ranking,
               s.image_url AS imageUrl
        FROM popular_stocks ps
                 LEFT JOIN stocks s ON s.code = ps.stock_code
        WHERE ps.date_type='DAY' AND ps.base_date=#{baseDate}
        ORDER BY ps.ranking ASC
            LIMIT 10
        ]]>
</select>

    <!-- 특정 주차 WEEK -->
    <select id="selectPopularStocksCachedWeek" resultType="org.scoula.domain.ranking.PopularStockDto">
  <![CDATA[
        SELECT ps.stock_code AS stockCode, ps.stock_name AS stockName,
               ps.transaction_count AS transactionCount, ps.ranking AS ranking,
               s.image_url AS imageUrl
        FROM popular_stocks ps
                 LEFT JOIN stocks s ON s.code = ps.stock_code
        WHERE ps.date_type='WEEK' AND ps.base_date=#{baseDate}
        ORDER BY ps.ranking ASC
            LIMIT 10
        ]]>
</select>

    <!-- ✅ popular_stocks에서 최신 WEEK 기준일 -->
    <select id="selectLatestWeekBaseDateFromPopular" resultType="string">
  <![CDATA[
        SELECT DATE_FORMAT(MAX(base_date), '%Y-%m-%d')
        FROM popular_stocks
        WHERE date_type='WEEK'
        ]]>
</select>

    <select id="selectWeeklyRankingCached" resultType="org.scoula.domain.ranking.RankingByTraitGroupDto">
  <![CDATA[
        SELECT r.user_id AS userId, IFNULL(u.nickname,'익명') AS nickname,
               it.group_code AS traitGroup, u.risk_type AS originalTrait,
               r.gain_rate AS gainRate, r.ranking AS ranking
        FROM ranking_by_trait_group r
                 JOIN user u ON u.id=r.user_id
                 JOIN investment_types it ON it.risk_type=u.risk_type
        WHERE r.date_type='WEEK' AND r.base_date=#{baseDate}
        ORDER BY r.ranking ASC
            LIMIT 100
        ]]>
</select>

    <select id="selectGroupedWeeklyRankingCached" parameterType="map"
            resultType="org.scoula.domain.ranking.RankingByTraitGroupDto">
  <![CDATA[
        SELECT r.user_id AS userId, IFNULL(u.nickname,'익명') AS nickname,
               it.group_code AS traitGroup, u.risk_type AS originalTrait,
               r.gain_rate AS gainRate, r.ranking AS ranking
        FROM ranking_by_trait_group r
                 JOIN user u ON u.id=r.user_id
                 JOIN investment_types it ON it.risk_type=u.risk_type
        WHERE r.date_type='WEEK' AND r.base_date=#{baseDate} AND it.group_code=#{traitGroup}
        ORDER BY r.ranking ASC
            LIMIT 100
        ]]>
</select>

    <select id="selectMyRankingCached" parameterType="map"
            resultType="org.scoula.domain.ranking.MyRankingDto">
  <![CDATA[
        SELECT
            me.user_id                                AS userId,
            me.ranking                                AS ranking,
            me.gain_rate                              AS gainRate,
            ROUND(100 * (me.ranking - 1) / NULLIF(t.total_cnt, 0), 2) AS topPercent,
            it.group_code                             AS riskType,
            u.risk_type                               AS originalTrait,
            DATE_FORMAT(me.base_date, '%Y-%m-%d')     AS baseDate
        FROM ranking_by_trait_group me
                 JOIN `user` u ON u.id = me.user_id
                 JOIN investment_types it ON it.risk_type = u.risk_type
                 JOIN (
            SELECT COUNT(*) AS total_cnt
            FROM ranking_by_trait_group
            WHERE date_type = 'WEEK' AND base_date = #{baseDate}
        ) t ON 1 = 1
        WHERE me.date_type = 'WEEK'
          AND me.base_date = #{baseDate}
          AND me.user_id = #{userId}
            LIMIT 1
        ]]>
</select>

    <select id="existsRankingCacheByDate" parameterType="java.time.LocalDate" resultType="int">
  <![CDATA[
        SELECT EXISTS(SELECT 1 FROM ranking_by_trait_group
                      WHERE date_type='WEEK' AND base_date=#{baseDate})
        ]]>
</select>

    <select id="selectLatestWeekBaseDate" resultType="string">
  <![CDATA[
        SELECT DATE_FORMAT(MAX(base_date), '%Y-%m-%d')
        FROM ranking_by_trait_group
        WHERE date_type='WEEK' AND base_date <= CURDATE()
        ]]>
</select>

    <!-- 해당 기준일 존재 여부 -->
    <select id="existsWeekCacheByDate" parameterType="string" resultType="int">
  <![CDATA[
        SELECT EXISTS(
            SELECT 1 FROM ranking_by_trait_group
            WHERE date_type='WEEK' AND base_date=#{baseDate}
        )
        ]]>
</select>
</mapper>

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.scoula.mapper.ranking.AnalysisMapper">

    <!-- (1) 성향별 보유 비중 -->
    <select id="findTraitStocks" resultType="org.scoula.domain.ranking.TraitStockDto" parameterType="long">
        SELECT
            s.name AS name,
            ROUND(SUM(h.quantity * h.average_price) / SUM(SUM(h.quantity * h.average_price)) OVER (), 4) * 100 AS gain,
            s.image_url AS logo,

            SUM(CASE WHEN it.group_code = 'CONSERVATIVE' THEN h.quantity ELSE 0 END) AS conservativeRatio,
            SUM(CASE WHEN it.group_code = 'BALANCED' THEN h.quantity ELSE 0 END) AS balancedRatio,
            SUM(CASE WHEN it.group_code = 'AGGRESSIVE' THEN h.quantity ELSE 0 END) AS aggressiveRatio,
            SUM(CASE WHEN it.group_code IN ('ANALYTICAL', 'EMOTIONAL') THEN h.quantity ELSE 0 END) AS specialRatio

        FROM holdings h
                 JOIN user u ON h.account_id = u.id
                 JOIN investment_types it ON u.risk_type = it.risk_type
                 JOIN stocks s ON h.stock_code = s.code
        WHERE h.account_id = #{userId}
        GROUP BY h.stock_code
        ORDER BY gain DESC
            LIMIT 5
    </select>

    <!-- (2) 내 수익률 분포 위치 (기존 유지) -->
    <select id="findMyDistribution" resultMap="MyDistributionResultMap" parameterType="long">
        WITH
            -- 종목별 수익률 계산
            stock_profits AS (
                SELECT
                    h.stock_code,
                    s.name AS stock_name,
                    h.account_id,
                    CASE
                        WHEN h.average_price > 0 THEN ROUND((h.current_price - h.average_price) / h.average_price * 100, 2)
                        ELSE 0
                        END AS profit_rate
                FROM holdings h
                         JOIN stocks s ON h.stock_code = s.code
            ),
            -- 내 보유 종목 수익률
            my_profits AS (
                SELECT * FROM stock_profits WHERE account_id = #{userId}
            ),
            -- 종목별 수익률 랭킹 계산
            ranked AS (
                SELECT
                    stock_code,
                    profit_rate,
                    RANK() OVER (PARTITION BY stock_code ORDER BY profit_rate DESC) AS ranking,
                        COUNT(*) OVER (PARTITION BY stock_code) AS total_count
                FROM stock_profits
            ),
            -- 종목별 수익률 분포 계산
            distribution AS (
                SELECT
                    stock_code,
                    SUM(CASE WHEN profit_rate &lt; -10 THEN 1 ELSE 0 END) AS bin1,
                    SUM(CASE WHEN profit_rate BETWEEN -10 AND 0 THEN 1 ELSE 0 END) AS bin2,
                    SUM(CASE WHEN profit_rate BETWEEN 0 AND 10 THEN 1 ELSE 0 END) AS bin3,
                    SUM(CASE WHEN profit_rate BETWEEN 10 AND 20 THEN 1 ELSE 0 END) AS bin4,
                    SUM(CASE WHEN profit_rate BETWEEN 20 AND 30 THEN 1 ELSE 0 END) AS bin5,
                    SUM(CASE WHEN profit_rate &gt; 30 THEN 1 ELSE 0 END) AS bin6
                FROM stock_profits
                GROUP BY stock_code
            )
        SELECT
            CONCAT('종목 ', mp.stock_name) AS stock_name,
            mp.profit_rate AS gain_rate,
            r.ranking AS position_index,
            CONCAT('상위 ', ROUND(100 * (r.total_count - r.ranking + 1) / r.total_count, 1), '%') AS position_label,
            d.bin1 AS distribution_bin1,
            d.bin2 AS distribution_bin2,
            d.bin3 AS distribution_bin3,
            d.bin4 AS distribution_bin4,
            d.bin5 AS distribution_bin5,
            d.bin6 AS distribution_bin6
        FROM my_profits mp
                 JOIN ranked r ON mp.stock_code = r.stock_code AND mp.profit_rate = r.profit_rate
                 JOIN distribution d ON mp.stock_code = d.stock_code
    </select>

    <resultMap id="MyDistributionResultMap" type="org.scoula.domain.ranking.MyDistributionDto">
        <result property="stockName" column="stock_name"/>
        <result property="gainRate" column="gain_rate"/>
        <result property="positionIndex" column="position_index"/>
        <result property="positionLabel" column="position_label"/>
        <collection property="distributionBins" ofType="int">
            <result column="distribution_bin1"/>
            <result column="distribution_bin2"/>
            <result column="distribution_bin3"/>
            <result column="distribution_bin4"/>
            <result column="distribution_bin5"/>
            <result column="distribution_bin6"/>
        </collection>
    </resultMap>

    <!-- (3) 성향별 인기 종목 + 로고 포함 -->
    <select id="findPopularStocksByTrait" resultType="org.scoula.domain.ranking.PopularStockDto" parameterType="string">
        SELECT
            p.stock_code,
            p.stock_name,
            s.image_url,
            p.investor_count AS transaction_count,
            p.ranking
        FROM popular_stocks_by_trait_group p
                 LEFT JOIN stocks s ON p.stock_code = s.code
        WHERE p.trait_group = #{traitGroup}
        ORDER BY p.ranking
            LIMIT 50
    </select>

</mapper>
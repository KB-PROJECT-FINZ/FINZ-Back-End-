<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.scoula.mapper.ranking.AnalysisMapper">

    <!-- (1) 성향별 보유 비중 -->
    <select id="findTraitStocks" resultType="org.scoula.domain.ranking.TraitStockDto" parameterType="long">
        SELECT
            s.name AS name,
            ROUND(SUM(h.quantity * h.average_price) / SUM(SUM(h.quantity * h.average_price)) OVER (), 4) * 100 AS gain,
            s.image_url AS logo,

            SUM(CASE WHEN it.group_code = 'CONSERVATIVE' THEN h.quantity ELSE 0 END) AS conservativeRatio,
            SUM(CASE WHEN it.group_code = 'BALANCED' THEN h.quantity ELSE 0 END) AS balancedRatio,
            SUM(CASE WHEN it.group_code = 'AGGRESSIVE' THEN h.quantity ELSE 0 END) AS aggressiveRatio,
            SUM(CASE WHEN it.group_code IN ('ANALYTICAL', 'EMOTIONAL') THEN h.quantity ELSE 0 END) AS specialRatio

        FROM holdings h
                 JOIN user_accounts ua ON h.account_id = ua.account_id
                 JOIN user u ON ua.user_id = u.id
                 JOIN investment_types it ON u.risk_type = it.risk_type
                 JOIN stocks s ON h.stock_code = s.code

        WHERE ua.user_id = #{userId}

        GROUP BY h.stock_code, s.name, s.image_url
        ORDER BY gain DESC

    </select>

    <!-- (2) 내 수익률 분포 위치 (기존 유지) -->
    <select id="findMyDistribution" resultMap="MyDistributionResultMap" parameterType="long">
        SELECT
        stock_code AS stockCode,
        stock_name AS stockName,
        gain,
        position_index AS positionIndex,
        position_label AS positionLabel,
        distribution_bins AS distributionBins,  <!-- JSON 혹은 구분자 형태라면 별도 처리 필요 -->
        color
        FROM my_stock_distribution
        WHERE user_id = #{userId}
    </select>

    <resultMap id="MyDistributionResultMap" type="org.scoula.domain.ranking.MyDistributionDto">
        <result property="stockName" column="stock_name"/>
        <result property="gainRate" column="gain_rate"/>
        <result property="positionIndex" column="position_index"/>
        <result property="positionLabel" column="position_label"/>
        <collection property="distributionBins" ofType="int">
            <result column="distribution_bin1"/>
            <result column="distribution_bin2"/>
            <result column="distribution_bin3"/>
            <result column="distribution_bin4"/>
            <result column="distribution_bin5"/>
            <result column="distribution_bin6"/>
        </collection>
    </resultMap>

    <!-- (3) 성향별 인기 종목 -->
    <select id="findPopularStocksByTrait" resultType="org.scoula.domain.ranking.PopularStockDto" parameterType="string">
        SELECT
            p.stock_code,
            p.stock_name,
            s.image_url,
            p.investor_count AS transaction_count,
            p.ranking
        FROM popular_stocks_by_trait_group p
                 LEFT JOIN stocks s ON p.stock_code = s.code
        WHERE p.trait_group = #{traitGroup}
        ORDER BY p.ranking
            LIMIT 50
    </select>

    <!-- 내 수익률 분포 업데이트 -->
    <update id="updateDistribution" parameterType="map">
        UPDATE my_stock_distribution
        SET
            gain_rate = #{distribution.gainRate},
            position_index = #{distribution.positionIndex},
            position_label = #{distribution.positionLabel},
            bin_0 = #{distribution.distributionBins[0]},
            bin_1 = #{distribution.distributionBins[1]},
            bin_2 = #{distribution.distributionBins[2]},
            bin_3 = #{distribution.distributionBins[3]},
            bin_4 = #{distribution.distributionBins[4]},
            bin_5 = #{distribution.distributionBins[5]},
            color = #{distribution.color},
            updated_at = CURRENT_TIMESTAMP
        WHERE user_id = #{userId}
          AND stock_code = #{distribution.stockCode}
    </update>

    <!-- 내 수익률 분포 신규 저장 -->
    <insert id="insertDistribution" parameterType="map">
        INSERT INTO my_stock_distribution
        (user_id, stock_code, stock_name, gain_rate, position_index, position_label,
         bin_0, bin_1, bin_2, bin_3, bin_4, bin_5, color)
        VALUES (
                   #{userId},
                   #{distribution.stockCode},
                   #{distribution.stockName},
                   #{distribution.gainRate},
                   #{distribution.positionIndex},
                   #{distribution.positionLabel},
                   #{distribution.distributionBins[0]},
                   #{distribution.distributionBins[1]},
                   #{distribution.distributionBins[2]},
                   #{distribution.distributionBins[3]},
                   #{distribution.distributionBins[4]},
                   #{distribution.distributionBins[5]},
                   #{distribution.color}
               )
    </insert>

</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.scoula.mapper.LearningMapper">

    <!--콘텐츠 전체 조회-->
    <select id="getAllContents" resultType="org.scoula.domain.learning.vo.LearningContentVO">
        SELECT * FROM learning_contents
    </select>

    <!--특정 콘텐츠의 퀴즈 조회-->
    <select id="getQuizByContentId" parameterType="int" resultType="org.scoula.domain.learning.vo.LearningQuizVO">
        SELECT * FROM learning_quiz WHERE quiz_id = #{contentId}
    </select>

    <!--퀴즈 한 개를 quiz_id 기준으로 조회-->
    <select id="getQuizById" resultType="org.scoula.domain.learning.vo.LearningQuizVO">
        SELECT * FROM learning_quiz WHERE quiz_id = #{quizId}
    </select>

    <!--콘텐츠 상세 조회-->
    <select id="getContentById" parameterType="int" resultType="org.scoula.domain.learning.dto.LearningContentDTO">
        SELECT * FROM learning_contents WHERE content_id = #{id}
    </select>

    <!--투자 성향별 콘텐츠 필터링-->
    <select id="getContentsByGroupCode" parameterType="String" resultType="org.scoula.domain.learning.vo.LearningContentVO">
        SELECT content_id, group_code, type, title, body, image_url, youtube_url, created_at
        FROM learning_contents
        WHERE group_code = #{groupCode}
    </select>

    <insert id="insertLearningHistory" parameterType="org.scoula.domain.learning.dto.LearningHistoryDto">
        INSERT INTO user_learning_history(user_id, content_id, viewed_at)
        VALUES  (#{userId}, #{contentId}, NOW())
    </insert>

    <select id="isUserIdAndContentId" resultType="int">
        SELECT COUNT(*) FROM user_learning_history
        WHERE user_id=#{userId} AND content_id=#{contentId}
    </select>

    <select id="getLearningHistoryList" resultType="org.scoula.domain.learning.vo.LearningHistoryVO">
        SELECT * FROM user_learning_history
        WHERE user_id = #{userId}
    </select>

    <select id="findGroupCodeByUserId" parameterType="Long" resultType="String">
        SELECT it.group_code
        FROM user u
                 JOIN investment_types it ON u.risk_type = it.risk_type
        WHERE u.id = #{userId}
    </select>


    <select id="findUnreadContent" resultType="org.scoula.domain.learning.vo.LearningContentVO">
        SELECT lc.*
        FROM learning_contents lc
                 LEFT JOIN user_learning_history ulh
                           ON lc.content_id = ulh.content_id AND ulh.user_id = #{userId}
        WHERE lc.group_code = #{groupCode}
          AND ulh.content_id IS NULL
    </select>

    <select id="findTitlesByGroupCode" resultType="string">
        SELECT title FROM learning_contents WHERE group_code = #{groupCode}
    </select>

    <insert id="insertContent" parameterType="org.scoula.domain.learning.vo.LearningContentVO" useGeneratedKeys="true" keyProperty="contentId">
        INSERT INTO learning_contents
            (type, title, body, image_url, youtube_url, created_at, group_code)
        VALUES
            (#{type}, #{title}, #{body}, #{imageUrl}, #{youtubeUrl}, #{createdAt}, #{groupCode})
    </insert>

    <select id="findCompletedContentByUserId" resultType="org.scoula.domain.learning.vo.LearningContentVO">
        SELECT lc.*
        FROM user_learning_history ulh
                 JOIN learning_contents lc ON ulh.content_id = lc.content_id
        WHERE ulh.user_id = #{userId}
    </select>
    <insert id="insertQuiz" parameterType="org.scoula.domain.learning.vo.LearningQuizVO">
        INSERT INTO learning_quiz (
            quiz_id, question, answer, comment, credit_reward
        ) VALUES (
                     #{quizId}, #{question}, #{answer}, #{comment}, #{creditReward}
                 )
    </insert>



</mapper>
